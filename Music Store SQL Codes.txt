Music Store Query.sql

Here, SQL codes for analyze music store data. 


1. Who is the most senior employee based on job titles?

SELECT employee.first_name , employee.last_name, employee.title FROM employee ORDER BY employee.levels DESC LIMIT 1;



2. Which Country has the most invoices?

SELECT invoice.billing_country as Country, COUNT(*) AS Country_Count FROM invoice GROUP BY invoice.billing_country ORDER BY Country_Count DESC;



3. What are the top 3 values of Total Invoices?

SELECT invoice.total as Total_Billing FROM invoice ORDER BY invoice.total DESC LIMIT 3;

	

4. Which city has the best customers? We would like to throw a promotional Music Festival in the city we made the most money. 
Write a query that returns one city that has the highest sum of invoice totals. Return both the city name & sum of all invoice totals 

SELECT invoice.billing_city AS City, sum(invoice.total) AS Invoice_Total
FROM invoice
GROUP BY invoice.billing_city
ORDER BY Invoice_Total DESC
LIMIT 1;



5. Who is the best customer? The customer who has spent the most money will be declared the best customer. 
Write a query that returns the person who has spent the most money.

SELECT customer.customer_id, customer.first_name, customer.last_name, sum(invoice.total) AS Total_Spending
FROM customer
JOIN invoice
	ON customer.customer_id = invoice.customer_id
GROUP BY customer.customer_id
ORDER BY Total_Spending DESC
LIMIT 1;



6. Return email, first name, last name of the music listener of genre = “rock” arranged alphabetically.

SELECT DISTINCT customer.email, customer.first_name, customer.last_name AS LastName, genre.name AS Name
FROM customer
JOIN invoice ON customer.customer_id = invoice.customer_id
JOIN invoice_line ON invoice.invoice_id = invoice_line.invoice_id
WHERE track_id 
IN (
    SELECT track_1.track_id 
    FROM track_1
    JOIN genre
        ON track_1.genre_id = genre.genre_id
    WHERE genre.name LIKE "Rock")
ORDER BY customer.email ASC;

	

7. Let’s invite the artists who has written most songs of the rock genre from our database. Write a query to return artist name and count of songs written by top 10 bands.

SELECT artist.artist_id, artist.name, COUNT(artist.artist_id) AS Count_of_track
FROM track_1
JOIN album ON album.album_id = track_1.album_id
JOIN artist ON artist.artist_id = album.artist_id
JOIN genre ON genre.genre_id = track_1.genre_id
WHERE genre.name = "Rock"
GROUP BY artist.artist_id
ORDER by Count_of_track DESC
LIMIT 10;


8. Return all the track names that have a song length longer than the average song length.  Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first

SELECT track_1.name, track_1.milliseconds
FROM track_1
WHERE track_1.milliseconds > (SELECT AVG(track_1.milliseconds) AS avg_len_song
                              FROM track_1)
ORDER BY track_1.milliseconds DESC;

	

9. We want to find out the most popular music Genre for each country. We determine the most popular genre as the genre with the highest amount of purchases. Write a query that returns each country along with the top Genre. For countries where the maximum number of purchases is shared, return all Genres. 

WITH popular_genre AS 
(
    SELECT COUNT(invoice_line.quantity) AS purchases, customer.country, genre.name, genre.genre_id, 
	ROW_NUMBER() OVER(PARTITION BY customer.country ORDER BY COUNT(invoice_line.quantity) DESC) AS RowNo 
    FROM invoice_line 
	JOIN invoice ON invoice.invoice_id = invoice_line.invoice_id
	JOIN customer ON customer.customer_id = invoice.customer_id
	JOIN track ON track.track_id = invoice_line.track_id
	JOIN genre ON genre.genre_id = track.genre_id
	GROUP BY 2,3,4
	ORDER BY 2 ASC, 1 DESC
)
SELECT * FROM popular_genre WHERE RowNo <= 1


10. Write a query that determines the customer that has spent the most on music for each country. Write a query that returns the country along with the top customer and how much they spent. For countries where the top amount spent is shared, provide all customers who spent this amount. 

WITH Customer_with_country AS (
		SELECT customer.customer_id,first_name, last_name, billing_country, SUM(total) AS total_spending,
	      ROW_NUMBER() OVER(PARTITION BY billing_country ORDER BY SUM(total) DESC) AS RowNo 
		FROM invoice
		JOIN customer ON customer.customer_id = invoice.customer_id
		GROUP BY 1,2,3,4
		ORDER BY 4 ASC,5 DESC)
        
SELECT * FROM Customer_with_country WHERE RowNo <= 1;


